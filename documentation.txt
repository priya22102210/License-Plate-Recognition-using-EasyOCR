# License Plate Recognition using EasyOCR

This project demonstrates license plate recognition using the EasyOCR library in Python. It detects and extracts license plate numbers from images.

## Installation

To run this project, you need to have the following dependencies installed:

- `easyocr`: A Python package for Optical Character Recognition (OCR) text detection. It supports text detection in 58 languages.
- `imutils`: A collection of convenience functions to simplify image processing tasks with OpenCV.
- `opencv-python-headless`: OpenCV library for computer vision tasks without GUI.
- `torch` and `torchvision`: PyTorch library for machine learning tasks.

You can install the dependencies by running the following command:

```bash
pip install -r requirements.txt
```

## Usage

1. Import the necessary libraries:

```python
import cv2
from matplotlib import pyplot as plt
import numpy as np
import easyocr
import imutils
```

2. Load the image:

```python
img = cv2.imread("car.jpg")
gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
```

3. Apply filters and perform edge detection:

```python
bfilter = cv2.bilateralFilter(gray, 11, 17, 17)
edged = cv2.Canny(bfilter, 30, 200)
```

4. Find contours and extract the license plate region:

```python
keypoints = cv2.findContours(edged.copy(), cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE)
contours = imutils.grab_contours(keypoints)
contours = sorted(contours, key=cv2.contourArea, reverse=True)[:10]
location = None
for contour in contours:
    approx = cv2.approxPolyDP(contour, 10, True)
    if len(approx) == 4:
        location = approx
        break
```

5. Crop the license plate region:

```python
mask = np.zeros(gray.shape, np.uint8)
new_image = cv2.drawContours(mask, [location], 0, 255, -1)
new_image = cv2.bitwise_and(img, img, mask=mask)
(x, y) = np.where(mask == 255)
(x1, y1) = (np.min(x), np.min(y))
(x2, y2) = (np.max(x), np.max(y))
cropped_image = gray[x1:x2+1, y1:y2+1]
```

6. Perform OCR on the cropped image:

```python
reader = easyocr.Reader(['en'])
result = reader.readtext(cropped_image)
text = result[0][-2]
```

7. Display the result:

```python
font = cv2.FONT_HERSHEY_SIMPLEX
res = cv2.putText(img, text=text, org=(approx[0][0][0], approx[1][0][1] + 60), fontFace=font, fontScale=1, color=(0, 255, 0), thickness=2)
res = cv2.rectangle(img, tuple(approx[0][0]), tuple(approx[2][0]), (0, 255, 0), 3)
plt.imshow(cv2.cvtColor(res, cv2.COLOR_BGR2RGB))
plt.show()
```

For more information and examples, please refer to the [project repository](https://github.com/your-username/your-repo).

## License

This project is licensed under the MIT License. See the [LICENSE](LICENSE) file for details.

Feel free to explore and modify the code according to your requirements.

If you encounter any issues or have any questions, please don't hesitate to reach out.

Happy license plate recognition!
